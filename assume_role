#!/usr/bin/env bash

#if [ $1 = "unset" ]; then
#
#  if [[ -z "${ORIGINAL_AWS_ACCESS_KEY_ID}" ]]; then
#    echo "ORIGINAL_AWS_ACCESS_KEY_ID does not exists"
#    exit 1
#  fi
#
#  unset AWS_ACCESS_KEY_ID
#  unset AWS_SECRET_ACCESS_KEY
#  unset AWS_SESSION_TOKEN
#  unset AWS_EXPIRATION
#
#  export AWS_ACCESS_KEY_ID=${ORIGINAL_AWS_ACCESS_KEY_ID}
#  export AWS_SECRET_ACCESS_KEY=${ORIGINAL_AWS_SECRET_ACCESS_KEY}
#
#  unset ORIGINAL_AWS_ACCESS_KEY_ID
#  unset ORIGINAL_AWS_SECRET_ACCESS_KEY
#  echo "-------Original------"
#  aws s3 ls
#fi


ROLE_SESSION_NAME="ROLE_SESSION_NAME_"`date +%s`
CMD="aws sts assume-role --role-arn \"${1}\" --role-session-name ${ROLE_SESSION_NAME} --duration-seconds 900 --output=json"
echo $CMD
CREDENTIALS=$(aws sts assume-role --role-arn ${1} --role-session-name ${ROLE_SESSION_NAME} --duration-seconds 900 --output=json) # `aws sts assume-role --role-arn "${2}" --role-session-name ${ROLE_NAME} --duration-seconds 900 --output=json`

export ORIGINAL_AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
export ORIGINAL_AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

export AWS_DEFAULT_REGION=us-east-1
export AWS_ACCESS_KEY_ID=`echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId'`
export AWS_SECRET_ACCESS_KEY=`echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey'`
export AWS_SESSION_TOKEN=`echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken'`
export AWS_EXPIRATION=`echo ${CREDENTIALS} | jq -r '.Credentials.Expiration'`

echo "-------Run as Assumed Role ------"
aws s3 ls
echo "Variable ORIGINAL_AWS_ACCESS_KEY_ID is saved in memory"



